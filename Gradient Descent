import numpy
def gradientDescent (X, y, theta, alpha, num_iters, epsilon, model, l ):
    m = len(y)
    i = 0
    while ((i<num_iters) and (model(X, y, theta, l)[0] >epsilon)):
        i +=1
        dJ = model(X, y, theta, l)[1];
        theta = theta - alpha * dJ;
    return  theta

